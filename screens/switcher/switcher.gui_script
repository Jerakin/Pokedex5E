local button = require "utils.button"
local monarch = require "monarch.monarch"
local profiles = require "pokedex.profiles"
local url = require "utils.url"

local ENABLED = vmath.vector4(0.34, 0.55, 0.6, 1)
local DISABLED = vmath.vector4(0.7, 0.7, 0.7, 1)

local function party_active(self)
	gui.set_color(self.btn_party, ENABLED)
	gui.set_color(self.btn_storage, DISABLED)
	gui.set_color(self.btn_add, DISABLED)
	gui.set_color(self.btn_profiles, DISABLED)
end

local function storage_active(self)
	gui.set_color(self.btn_party, DISABLED)
	gui.set_color(self.btn_storage, ENABLED)
	gui.set_color(self.btn_add, DISABLED)
	gui.set_color(self.btn_profiles, DISABLED)
end

local function add_active(self)
	gui.set_color(self.btn_party, DISABLED)
	gui.set_color(self.btn_storage, DISABLED)
	gui.set_color(self.btn_add, ENABLED)
	gui.set_color(self.btn_profiles, DISABLED)
end

local function profiles_active(self)
	gui.set_color(self.btn_party, DISABLED)
	gui.set_color(self.btn_storage, DISABLED)
	gui.set_color(self.btn_add, DISABLED)
	gui.set_color(self.btn_profiles, ENABLED)
end

local function no_active(self)
	gui.set_color(self.btn_party, DISABLED)
	gui.set_color(self.btn_storage, DISABLED)
	gui.set_color(self.btn_add, DISABLED)
	gui.set_color(self.btn_profiles, DISABLED)
end

function init(self)
	button.acquire()
	url.SWITCHER = msg.url()
	self.btn_party = gui.get_node("btn_party")
	self.btn_storage = gui.get_node("btn_storage")
	self.btn_add = gui.get_node("btn_add")
	self.btn_profiles = gui.get_node("btn_profiles")

	local top = monarch.top()

	button.register(self.btn_party, function()
		monarch.show("party")
	end)

	button.register(self.btn_storage, function()
		monarch.show("storage")
	end)

	button.register(self.btn_add , function()
		monarch.show("add")
	end)
	button.register(self.btn_profiles, function()
		monarch.show("profiles")
	end)
end

function final(self)
	button.unregister()
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and profiles.get_active() == nil then
		profiles_active(self)
		monarch.show("profiles")
		return true
	end	
	button.on_input(action_id, action)
end

function on_message(self, message_id, message)
	if message_id == hash("activate") then
		if message.screen == "edit" then
			party_active(self)
		elseif message.screen == "party" then
			party_active(self)
		elseif message.screen == "storage" then
			storage_active(self)
		elseif message.screen == "add" then
			add_active(self)
		elseif message.screen == "profiles" then
			profiles_active(self)
		else
			no_active(self)
		end
	end
end

