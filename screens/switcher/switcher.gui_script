local button = require "utils.button"
local monarch = require "monarch.monarch"

local ENABLED = vmath.vector4(0.34, 0.55, 0.6, 1)
local DISABLED = vmath.vector4(0.7, 0.7, 0.7, 1)

local function party_active(self)
	gui.set_color(self.btn_party, ENABLED)
	gui.set_color(self.btn_storage, DISABLED)
	gui.set_color(self.btn_add, DISABLED)
	gui.set_color(self.btn_profiles, DISABLED)
end

local function storage_active(self)
	gui.set_color(self.btn_party, DISABLED)
	gui.set_color(self.btn_storage, ENABLED)
	gui.set_color(self.btn_add, DISABLED)
	gui.set_color(self.btn_profiles, DISABLED)
end

local function add_active(self)
	gui.set_color(self.btn_party, DISABLED)
	gui.set_color(self.btn_storage, DISABLED)
	gui.set_color(self.btn_add, ENABLED)
	gui.set_color(self.btn_profiles, DISABLED)
end

local function profiles_active(self)
	gui.set_color(self.btn_party, DISABLED)
	gui.set_color(self.btn_storage, DISABLED)
	gui.set_color(self.btn_add, DISABLED)
	gui.set_color(self.btn_profiles, ENABLED)
end

function init(self)
	button.acquire()
	self.btn_party = gui.get_node("btn_party")
	self.btn_storage = gui.get_node("btn_storage")
	self.btn_add = gui.get_node("btn_add")
	self.btn_profiles = gui.get_node("btn_profiles")

	local top = monarch.top()
	
	if top == hash("edit") then
		party_active(self)
	elseif top == hash("party") then
		party_active(self)
	elseif top == hash("storage") then
		storage_active(self)
	elseif top == hash("add") then
		add_active(self)
	elseif top == hash("profiles") then
		profiles_active(self)
	end
	
	button.register(self.btn_party, function()
		party_active(self)
		monarch.show("party")
	end)

	button.register(self.btn_storage, function()
		storage_active(self)
		monarch.show("storage")
	end)

	button.register(self.btn_add , function()
		add_active(self)
		monarch.show("add")
	end)
	button.register(self.btn_profiles, function()
		profiles_active(self)
		monarch.show("profiles")
	end)
end

function final(self)
	button.unregister()
end

function on_input(self, action_id, action)
	button.on_input(action_id, action)
end

