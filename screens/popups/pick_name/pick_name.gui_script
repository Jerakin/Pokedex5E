local button = require "utils.button"
local monarch = require "monarch.monarch"
local gooey = require "gooey.gooey"
local profiles = require "pokedex.profiles"
local transitions = require "utils.transitions"

local function refresh_input(self, input, node_id)
	if not input.empty and not input.text:sub(-1):match("%a") then
		input.text = input.text:sub(1, -2)
	end

	if input.empty and not input.selected then
		gui.set_text(input.node, "Joe")
	end

	local cursor = gui.get_node("cursor")
	if input.selected then
		gui.set_enabled(cursor, true)
		gui.set_position(cursor, vmath.vector3(input.total_width, 0, 0))
		gui.cancel_animation(cursor, gui.PROP_COLOR)
		gui.set_color(cursor, vmath.vector4(0,0,0,1))
		gui.animate(cursor, gui.PROP_COLOR, vmath.vector4(1,1,1,0), gui.EASING_INSINE, 0.8, 0, nil, gui.PLAYBACK_LOOP_PINGPONG)
	else
		gui.set_enabled(cursor, false)
		gui.cancel_animation(cursor, gui.PROP_COLOR)
	end
end

function init(self)
	button.acquire()

	self.transition = transitions.default(gui.get_node("root"))
	
	gui.set_render_order(5)
	self.sender = monarch.data("pick_name") and monarch.data("pick_name").sender or nil
	local slot = monarch.data("pick_name") and monarch.data("pick_name").slot or nil
	
	button.register("btn_okay", function()
		local name = gui.get_text(gui.get_node("name_text"))
		if not name:sub(-1):match("%a") then
			name = name:sub(1, -2)
		end
		local _slot = profiles.add(name, slot)
		profiles.set_active(_slot)
		monarch.show("add", {clear=true})
	end)
	
end

function final(self)
	button.unregister()
end

function on_input(self, action_id, action)
	gooey.input("name_text", gui.KEYBOARD_TYPE_DEFAULT, action_id, action, {max_length = 10}, function(input)
		refresh_input(self, input, "name_text")
	end)
	self.transition.handle(message_id, message, sender)
	button.on_input(action_id, action)
	return true
end

function on_message(self, message_id, message, sender)
	transitions.on_message(self.transition, message_id, message, sender)
end