local monarch = require "monarch.monarch"
local gooey = require "gooey.gooey"
local profiles = require "pokedex.profiles"
local storage = require "pokedex.storage"
local trainer = require "pokedex.trainer"
local gro = require "utils.gui_render_order"
local url = require "utils.url"
local gooey_buttons = require "utils.gooey_buttons"
local tracking_id = require "utils.tracking_id"
local dex = require "pokedex.dex"
local slot
local max_active_pokemon = 3

local function redraw()
	local max_active_pokemon_range_low, max_active_pokemon_range_high = storage.get_max_active_pokemon_range()
	gui.set_text(gui.get_node("max_active_pokemon/value"), max_active_pokemon)
	gui.set_enabled(gui.get_node("max_active_pokemon/ctrl/btn_minus"), max_active_pokemon > max_active_pokemon_range_low)
	gui.set_enabled(gui.get_node("max_active_pokemon/ctrl/btn_plus"),  max_active_pokemon < max_active_pokemon_range_high)
end

local function refresh_input(self, input, node_id)
	if input.empty and not input.selected then
		gui.set_text(input.node, "ENTER NAME")
	end

	local cursor = gui.get_node("cursor")
	if input.selected then
		if input.empty then
			gui.set_text(input.node, "")
		end
		gui.set_enabled(cursor, true)
		gui.set_position(cursor, vmath.vector3(input.total_width*0.5, 0, 0))
		gui.cancel_animation(cursor, gui.PROP_COLOR)
		gui.set_color(cursor, vmath.vector4(0,0,0,1))
		gui.animate(cursor, gui.PROP_COLOR, vmath.vector4(1,1,1,0), gui.EASING_INSINE, 0.8, 0, nil, gui.PLAYBACK_LOOP_PINGPONG)
	else
		gui.set_enabled(cursor, false)
		gui.cancel_animation(cursor, gui.PROP_COLOR)
	end
end

function init(self)
	msg.post(url.MENU, "hide")
	gui.set_render_order(gro.POPUP)
	self.sender = monarch.data("pick_name") and monarch.data("pick_name").sender or nil
	slot = monarch.data("pick_name") and monarch.data("pick_name").slot or nil
	gui.set_enabled(gui.get_node("cursor"), false)
	if monarch.top() == hash("splash") then
		gui.set_enabled(gui.get_node("btn_cancel"), false)
		gui.set_position(gui.get_node("btn_okay"), vmath.vector3(0,-148,0))
	end

	max_active_pokemon = 3
	redraw()
end


local function okay()
	local name = gui.get_text(gui.get_node("name_text"))
	if name ~= "ENTER NAME" then
		local profile = profiles.add(name, slot)
		profiles.set_active(profile.slot)
		storage.load(profiles.get_active())
		trainer.load(profiles.get_active())
		dex.load(profiles.get_active())
		storage.set_max_active_pokemon(max_active_pokemon)
		monarch.show("add")
	end
end

local function cancel()
	gameanalytics.addDesignEvent {
		eventId = "Navigation:Back",
		value = tracking_id[monarch.top()]
	}
	monarch.back()
end

local function redraw_wrap(fnc)
	fnc()
	redraw()
end

function on_input(self, action_id, action)
	gooey.input("name_text", gui.KEYBOARD_TYPE_DEFAULT, action_id, action, {max_length = 10, allowed_characters="[%a%d]", use_marked_text=false}, function(input)
		refresh_input(self, input, "name_text")
	end)
	gooey.button("btn_okay", action_id, action, okay, function(b) gooey_buttons.common_button(b, gui.get_node("btn_text")) end)
	gooey.button("btn_cancel", action_id, action, cancel, function(b) gooey_buttons.common_button(b, gui.get_node("btn_text1")) end)

	gooey.button("max_active_pokemon/ctrl/btn_plus",  action_id, action, function() redraw_wrap(function() max_active_pokemon = max_active_pokemon + 1 end) end, gooey_buttons.plus_button)
	gooey.button("max_active_pokemon/ctrl/btn_minus", action_id, action, function() redraw_wrap(function() max_active_pokemon = max_active_pokemon - 1 end) end, gooey_buttons.minus_button)
	return true
end