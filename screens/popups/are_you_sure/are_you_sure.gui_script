local monarch  = require "monarch.monarch"
local url = require "utils.url"
local render_order = require "utils.gui_render_order"
local gooey_buttons = require "utils.gooey_buttons"
local gooey = require "gooey.gooey"
local gui_utils = require "utils.gui"

local data
local sender
local id
local cb

function init(self)
	gooey.acquire_input()
	gui.set_render_order(render_order.POPUP_ON_POPUP)
	data = monarch.data("are_you_sure")
	cb = data.cb
	sender = data.sender
	id = data.id
	gui.set_text(gui.get_node("txt_title"), data.title)

	if data.text then
		gui_utils.adjust_for_text_change_vertical("txt", data.text, {"box"}, {"btn_exit", "btn_confirm", "txt_sub"}, {"txt", "txt_title"})
	end
	
	if data.sub_text then
		gui_utils.adjust_for_text_change_vertical("txt_sub", data.sub_text, nil, nil, {"box"})
	end
end

local function confirm()
	if sender then
		msg.post(sender, "response", {response=true, data=data.data, id=id})
	end
	if cb then
		cb(true)
	end
	monarch.back()
end

local function exit()
	if sender then
		msg.post(sender, "response", {response=false, data=data.data, id=id})
	end
	if cb then
		cb(false)
	end
	monarch.back()
end

function on_input(self, action_id, action)
	local confirm_b = gooey.button("btn_confirm", action_id, action, confirm, function(b) gooey_buttons.common_button(b, gui.get_node("txt_confim")) end)
	if confirm_b.consumed then
		return true
	end
	local exit_b = gooey.button("btn_exit", action_id, action, exit, function(b) gooey_buttons.common_button(b, gui.get_node("txt_exit")) end)
	if exit_b.consumed then
		return true
	end
	local g = gooey.button("box", action_id, action, function() end)
	if not g.over then
		gooey.button("dimmer", action_id, action, function() monarch.back() end)
	end
end
