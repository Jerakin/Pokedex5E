local monarch  = require "monarch.monarch"
local render_order = require "utils.gui_render_order"
local gooey_buttons = require "utils.gooey_buttons"
local gooey = require "gooey.gooey"
local pokedex = require "pokedex.pokedex"
local _pokemon = require "pokedex.pokemon"
local share = require "pokedex.share"
local screens = require "utils.screens"

function init(self)
	gooey.acquire_input()
	gui.set_render_order(render_order.POPUP_ON_POPUP)

	self.pokemon = share.get_clipboard()
	if self.pokemon then 
		_pokemon.upgrade_pokemon(self.pokemon)
	end
	
	local node_txt = gui.get_node("txt")
	local node_txt_title = gui.get_node("txt_title")
	local node_btn_exit = gui.get_node("btn_exit")
	local node_box = gui.get_node("box")	
	local node_btn_confirm = gui.get_node("btn_confirm")
	
	local pos_btn_confirm = gui.get_position(node_btn_confirm)	
	local metrics_txt = gui.get_text_metrics_from_node(node_txt)
	
	if self.pokemon then		
		local species = pokedex.get_species_display(_pokemon.get_current_species(self.pokemon), _pokemon.get_variant(self.pokemon))
		local level = _pokemon.get_current_level(self.pokemon)
		gui.set_text(node_txt, "Do you want to import level " .. level .. " " .. species .. "?")
	else		
		gui.set_text(node_txt_title, "Import Failed")
		gui.set_text(gui.get_node("txt_confim"), "Ok")		
		gui.set_text(node_txt, "To import, first copy a Pokemon string to your clipboard.\n\nPokemon strings can be exported from \"Someone's PC\"")

		-- Only use 1 button, cancel wouldn't do anything anyway
		gui.set_enabled(node_btn_exit, false)
		pos_btn_confirm.x = 0		
	end

	-- Shift everything around to account for the new size of the text node

	local metrics_txt_new = gui.get_text_metrics_from_node(node_txt)
	local diff_txt_size = metrics_txt_new.height - metrics_txt.height

	local pos_txt_title = gui.get_position(node_txt_title)
	local pos_btn_exit = gui.get_position(node_btn_exit)
	local size_box = gui.get_size(node_box)	
	
	pos_txt_title.y = pos_txt_title.y + diff_txt_size/2
	pos_btn_confirm.y = pos_btn_confirm.y - diff_txt_size/2
	pos_btn_exit.y = pos_btn_exit.y - diff_txt_size/2
	size_box.y = size_box.y + diff_txt_size
	
	gui.set_position(node_txt_title, pos_txt_title)
	gui.set_position(node_btn_confirm, pos_btn_confirm)
	gui.set_position(node_btn_exit, pos_btn_exit)
	gui.set_size(node_box, size_box)
end


local function exit()
	monarch.back()
end


local function confirm(self)
	if self.pokemon then
		monarch.show(screens.IMPORT_POKEMON, nil, {pokemon=self.pokemon})
	else
		exit()
	end
end

function on_input(self, action_id, action)
	gooey.button("btn_confirm", action_id, action, function() confirm(self) end, function(b) gooey_buttons.common_button(b, gui.get_node("txt_confim")) end)
	gooey.button("btn_exit", action_id, action, exit, function(b) gooey_buttons.common_button(b, gui.get_node("txt_exit")) end)
	local g = gooey.button("box", action_id, action, function() end)
	if not g.over then
		gooey.button("dimmer", action_id, action, function() monarch.back() end)
	end
end
