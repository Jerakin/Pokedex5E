local monarch  = require "monarch.monarch"
local render_order = require "utils.gui_render_order"
local transitions = require "utils.transitions"
local notify = require "utils.notify"
local messages = require "utils.messages"

local data

local anim_status = {STARTED = 1, INIT = 2, STARTED_DONE = 3, EXIT = 4, EXIT_DONE = 5}

local function exit(self)
	local delay = notify.stay_time
	self.status = anim_status.EXIT
	if self.instant ~= nil then
		delay = self.instant
	end

	gui.animate(self.root, "position", self.start_pos, gui.EASING_OUTSINE, notify.out_time, delay, function()
		self.status = anim_status.EXIT_DONE
		notify.done()
	end)
end

local function start(self)
	self.status = anim_status.STARTED
	gui.animate(self.root, "position", self.end_pos, gui.EASING_INSINE, notify.in_time, 0, function() 
		self.status = anim_status.STARTED_DONE
		exit(self)
	end)
end

function init(self)
	msg.post(".", messages.ACQUIRE_INPUT_FOCUS)
	self.end_pos = vmath.vector3(0, 500, 0)
	self.start_pos = vmath.vector3(0, 700, 0)
	self.instant = nil
	self.root = gui.get_node("info")
	gui.set_render_order(render_order.POPUP_ON_POPUP)
	self.status = anim_status.INIT
	gui.set_text(gui.get_node("txt_info"), notify.get_text())
	start(self)
end

function on_input(self, action_id, action)
	if action_id == messages.TOUCH and action.pressed and gui.pick_node(self.root, action.x, action.y) and self.status == anim_status.EXIT then
		self.instant = 0
		gui.cancel_animation(self.root, "position")
		exit(self)
		return true
	end
end

