local monarch = require "monarch.monarch"
local gooey_buttons = require "utils.gooey_buttons"
local gooey = require "gooey.gooey"
local pokedex = require "pokedex.pokedex"
local dex = require "pokedex.dex"
local gui_colors = require "utils.gui_colors"
local gui_utils = require "utils.gui"
local dex = require "pokedex.dex"
local url = require "utils.url"
local messages = require "utils.messages"

local POKEMON_SPECIES_TEXT_SCALE = vmath.vector3(1.5)

local function cm_to_feet(cm)
	local inches = cm / 2.45
	local feet = math.floor(inches/12)
	local inches = math.fmod(feet, 12)
	return feet .. "'" .. inches .. '"' 
end

local function hg_to_pounds(hg)
	return math.floor((hg * 0.22046226 ) + 0.5) * 0.1 .. "lbs"
end

local function height_string(decimeters)
	return cm_to_feet(decimeters*10) .. " (" .. decimeters/10 .. " m)"
end

local function weight_string(hg)
	return hg_to_pounds(hg*10) .. " (" .. hg/10 .. " kg)"
end

function init(self)
	gooey.acquire_input()
	msg.post(url.MENU, messages.HIDE)
	self.species = monarch.data("pokedex_pokemon").species
	local index = pokedex.get_index_number(self.species)
	local flavor = pokedex.get_flavor(self.species)
	local weight = pokedex.get_weight(self.species)
	local height = pokedex.get_height(self.species)
	local genus = pokedex.get_genus(self.species)
	local types = pokedex.get_pokemon_type(self.species)
	local sprite, texture = pokedex.get_sprite(self.species)
	gui.set_texture(gui.get_node("species"), texture)
	if sprite then
		gui.play_flipbook(gui.get_node("species"), sprite)
	end
	
	gui.set_enabled(gui.get_node("bg_type1"), false)
	gui.set_enabled(gui.get_node("bg_type2"), false)
	for i, t in ipairs(types) do
		gui.set_enabled(gui.get_node("bg_type" .. i), true)
		gui.set_text(gui.get_node("txt_type" .. i), t:upper())
	end
	gui.set_text(gui.get_node("txt_species"), self.species:upper())
	gui.set_text(gui.get_node("txt_index"),  string.format("#%03d", index))
	gui.set_text(gui.get_node("txt_genus"), genus)
	
	gui.set_text(gui.get_node("txt_weight"), weight_string(weight))
	gui.set_text(gui.get_node("txt_height"), height_string(height))
	gui.set_text(gui.get_node("txt_flavor"), flavor)
	local metric = gui.get_text_metrics_from_node(gui.get_node("txt_flavor"))
	local scale = gui.get_scale(gui.get_node("txt_flavor"))
	local size = gui.get_size(gui.get_node("bg_flavor"))
	local height = metric.height * scale.y
	local dif = height - size.y
	if height > size.y then
		gui.set_size(gui.get_node("bg_flavor"), vmath.vector3(500, height + 20, 0))
		local size_bg = gui.get_size(gui.get_node("background"))
		size_bg.y = size_bg.y + dif + 20
		gui.set_size(gui.get_node("background"), size_bg)
		
		local caught = gui.get_position(gui.get_node("btn_caught"))
		local p_seen = gui.get_position(gui.get_node("btn_seen"))
		
		caught.y = caught.y - dif - 20
		p_seen.y = caught.y
		gui.set_position(gui.get_node("btn_caught"), caught)
		gui.set_position(gui.get_node("btn_seen"), p_seen)
	end

	gui.set_scale(gui.get_node("txt_species"), POKEMON_SPECIES_TEXT_SCALE)
	gui_utils.scale_text_to_fit_size(gui.get_node("txt_species"))
end


function final(self)
	msg.post(url.MENU, messages.SHOW)
end


function on_input(self, action_id, action)
	local a = gooey.button("btn_seen", action_id, action, function()
		local d = monarch.data("pokedex_pokemon")
		dex.set(self.species, dex.states.SEEN)
		msg.post(d.sender, "mark", {index=d.index, row=d.row, state=dex.states.SEEN})
		monarch.back()
	end, function(b) gooey_buttons.common_button(b, gui.get_node("txt_seen")) end)
	
	local b = gooey.button("btn_caught", action_id, action, function()
		local d = monarch.data("pokedex_pokemon")
		msg.post(d.sender, "mark", {index=d.index, row=d.row, state=dex.states.CAUGHT})
		dex.set(self.species, dex.states.CAUGHT)
		monarch.back()
	end, function(b) gooey_buttons.common_button(b, gui.get_node("txt_caught")) end)
	
	local c = gooey.button("background", action_id, action, function() end)
	if action.released and not a.over and not b.over and not c.over then
		monarch.back()
	end
end

