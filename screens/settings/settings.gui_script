local monarch = require "monarch.monarch"
local url = require "utils.url"
local gooey = require "gooey.gooey"
local gui_colors = require "utils.gui_colors"
local gooey_buttons = require "utils.gooey_buttons"
local gui_utils = require "utils.gui"
local flow = require "utils.flow"
local fakemon = require "fakemon.fakemon"
local settings = require "pokedex.settings"
local log = require "utils.log"
local tracking_id = require "utils.tracking_id"
local cloud_save = require "utils.cloud_save"

function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post(url.MENU, "hide")

	if gpgs == nil then
		gui.set_enabled(gui.get_node("google_sign_in"), false)
	end
	if sys.get_sys_info().system_name == "HTML5" then
		gui.set_enabled(gui.get_node("fakemon"), false)
	else
		if fakemon.LOCAL_INDEX then
			gui.set_text(gui.get_node("name_fakemon"), fakemon.LOCAL_INDEX["name"])
		else
			gui.set_enabled(gui.get_node("btn_remove_fakemon"), false)
		end
	end
end

function on_input(self, action_id, action)
	gooey.button("btn_pick_fakemon", action_id, action, function()
		monarch.show("fakemon")
	end, function(button) gooey_buttons.common_button(button, gui.get_node("txt_paste")) end)
	
	gooey.button("btn_close", action_id, action, function()
		gameanalytics.addDesignEvent {
			eventId = "Navigation:Back",
			value = tracking_id[monarch.top()]
		}
		monarch.back()
	end, gooey_buttons.close_button)
	
	gooey.button("btn_remove_fakemon", action_id, action, function()
		flow.start(function()
			fakemon.remove_package()
			flow.until_true(function() return not fakemon.BUSY end)
			msg.post("@system:", "reboot")
		end)
	end, function(button) gooey_buttons.common_button(button, gui.get_node("txt_paste")) end)

	gooey.button("box", action_id, action, cloud_save.final)
	gooey.button("google_sign_in", action_id, action, cloud_save.attempt_sign_in, gooey_buttons.google)
end