local pokemon_edit = require "templates.change_pokemon.change_pokemon"
local monarch = require "monarch.monarch"
local button = require "utils.button"
local natures = require "pokedex.natures"
local pokedex = require "pokedex.pokedex"
local storage = require "pokedex.storage"
local url = require "utils.url"
local transitions = require "utils.transitions"

local HAVE_EVOLVED = false

function init(self)
	function self.redraw(self)
		if not HAVE_EVOLVED and pokedex.can_evolve(self.pokemon.species) and pokedex.evolve_level(self.pokemon.species) <= self.pokemon.level and self.pokemon.min_level < self.pokemon.level then
			gui.set_enabled(self.evolve_button, true)
		else
			gui.set_enabled(self.evolve_button, false)
		end
	end
	self.transition = transitions.default(gui.get_node("root"))
	msg.post(url.SWITCHER, "activate", {screen="party"})
	button.acquire()
	local pokemon_id = monarch.data("edit").id
	local pokemon = storage.get_copy(pokemon_id)
	pokemon_edit.init(self, pokemon)

	local index = 0
	for name, _ in pairs(pokemon.moves) do
		index = index + 1
		table.insert(self.pokemon.moves, name)
	end
	
	gui.set_text(gui.get_node("txt_current_level"), "Lv. " .. pokemon.level .. "  ->")
	
	self.evolve_button = gui.get_node("btn_evolve")
	
	button.register(self.evolve_button, function()
		self.state = 2
		self.pokemon.moves = {}
		local index = 0
		for name, _ in pairs(pokemon.moves) do
			index = index + 1
			table.insert(self.pokemon.moves, name)
		end

		local evolve_into = pokedex.evolve_into(self.pokemon.species)
		if #evolve_into == 1 then
			HAVE_EVOLVED = true
			self.old_species = self.pokemon.species
			self.ability_score_improvment = self.ability_score_improvment - pokedex.evolve_points(self.pokemon.species)
			self.pokemon.species = evolve_into[1]
		else
			gui.set_enabled(self.root, false)
			gui.set_position(self.scrollist, vmath.vector3())
			self.list_items = evolve_into
		end

		gui.set_enabled(self.evolve_button, false)
		pokemon_edit.redraw(self)
	end)

	button.register("btn_edit", function()
		self.pokemon.attributes.increased = self.increased_attributes
		storage.edit(pokemon.id, self.pokemon)
		monarch.show("party", {clear=true})
	end)
	
	pokemon_edit.redraw(self)
end

function final(self)
	pokemon_edit.final(self)
end

function on_message(self, message_id, message, sender)
	pokemon_edit.on_message(self, message_id, message, sender)
	transitions.on_message(self.transition, message_id, message, sender)
end

function on_input(self, action_id, action)
	pokemon_edit.on_input(self, action_id, action)
end
